% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.orderedReg.R
\name{predict.orderedReg}
\alias{predict.orderedReg}
\title{Predict method for orderedReg objects}
\usage{
\method{predict}{orderedReg}(object, newdata = NULL, type = "class", ...)
}
\arguments{
\item{object}{A fitted orderedReg model.}

\item{newdata}{Optional new data for which to predict.}

\item{type}{Type of prediction: "class" or "prob". Default is "class".}

\item{...}{Additional arguments.}
}
\value{
Depending on `type`, either a vector of predicted classes or a matrix of predicted probabilities.
}
\description{
Predict method for orderedReg objects
}
\details{
For probability predictions, the function returns a matrix of probabilities for each category.
For class predictions, the function returns the most likely category for each observation.
}
\examples{
set.seed(10101)

data <- data.frame(
  x1 = rnorm(100),
  x2 = rbinom(100, 1, 0.5),
  z1 = rnorm(100),
  z2 = rbinom(100, 1, 0.5)
)

y.hat.1 <- -1.5 + 0.5*data$x1 + 0.5*data$x2
y.hat.2 <- -0.5 + 0.5*data$x1 + 0.65*data$x2

# Compute probabilities
p2 <- plogis(y.hat.2, lower.tail = FALSE)
p1 <- plogis(y.hat.1, lower.tail = FALSE) - p2
p0 <- 1 - p1 - p2

# Combine probabilities into a matrix
prob_matrix <- cbind(p0, p1, p2)

# Generate the ordinal outcome for each observation
y_values <- apply(prob_matrix, 1, function(p) {
  outcome <- rmultinom(1, size = 1, prob = p)
  which(outcome == 1)
})

# Create the ordered factor
data$y <- factor(y_values, levels = c(1,2,3), ordered = TRUE)

# Fit model
result <- orderedReg(formula = y ~ x1 + x2, data = data, family = "logit")

# Predict classes on the training data
preds_class <- predict(result, newdata = data, type = "class")
table(preds_class, data$y)

# Predict probabilities
preds_prob <- predict(result, newdata = data, type = "prob")
head(preds_prob)

}
