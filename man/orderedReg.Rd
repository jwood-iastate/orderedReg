% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orderedReg.R
\name{orderedReg}
\alias{orderedReg}
\title{Estimate Ordinal and Partial Proportional Odds Models with Transformed Thresholds}
\usage{
orderedReg(
  formula,
  partial_formula = NULL,
  data,
  method = "BHHH",
  family = "logit",
  verbose = FALSE,
  weights = NULL,
  se_type = "default",
  bootstrap_reps = 1000
)
}
\arguments{
\item{formula}{A formula specifying the outcome and variables for the proportional odds model.}

\item{partial_formula}{A formula or list of formulas specifying variables for the non-proportional odds part of the model.
If a list is provided, each element corresponds to a specific outcome level (excluding the first level).}

\item{data}{A data frame containing the variables in the model.}

\item{method}{The estimation method to use, from \link[maxLik]{maxLik}. Options include: "NR", "CG", "BFGS", "BFGS-R", "NM", and "SANN".}

\item{family}{The family of the model, either "logit" or "probit". Default is "logit".}

\item{verbose}{Logical indicating whether to print optimization details during fitting. Default is `FALSE`.}

\item{weights}{Name of the variable in the data containing sampling weights (optional).}

\item{se_type}{The type of standard error to compute. Options include "default" or "bootstrap". Default is "default".}

\item{bootstrap_reps}{Number of bootstrap replications for calculating standard errors if `se_type = "bootstrap"`. Default is `1000`.}
}
\value{
A list containing model results, including:
\describe{
  \item{`estimate`}{Parameter estimates.}
  \item{`logLik`}{Log-likelihood value at convergence.}
  \item{`gradient`}{Gradient vector at convergence.}
  \item{`hessian`}{Hessian matrix at convergence.}
  \item{`bootstrap_se`}{If bootstrap is used, contains a data frame with bootstrap standard errors and confidence intervals.}
}
Additional attributes, such as the design matrices, categories, and formula information, are included for further analysis.
}
\description{
Estimate Ordinal and Partial Proportional Odds Models with Transformed Thresholds
}
\details{
This function estimates ordered and generalized ordered regression models
with transformed threshold parameters to ensure they are strictly increasing.

For non-proportional odds, users can specify a single formula for `partial_formula` to apply the same variables to all thresholds or a list of formulas where each corresponds to a specific outcome level (excluding the first level). This flexibility allows for level-specific covariates in the model.
}
\examples{
# Example 1: Proportional odds model
set.seed(123)
data <- data.frame(
  y = factor(sample(1:3, 100, replace = TRUE), ordered = TRUE),
  x1 = rnorm(100),
  x2 = rbinom(100, 1, 0.5),
  z1 = rnorm(100),
  z2 = rbinom(100, 1, 0.5)
)

result1 <- orderedReg(
  formula = y ~ x1 + x2,
  data = data,
  family = "logit"
)
summary(result1)

# Example 2: Partial proportional odds model with a single formula
result2 <- orderedReg(
  formula = y ~ x1,
  partial_formula = ~ z1 + z2,
  data = data,
  family = "logit"
)
summary(result2)

# Example 3: Partial proportional odds model with a list of formulas
partial_formulas <- list(
  ~ z1,         # Variables for the second level
  ~ z1 + z2     # Variables for the third level
)
result3 <- orderedReg(
  formula = y ~ x1,
  partial_formula = partial_formulas,
  data = data,
  family = "logit"
)
summary(result3)

# Example 4: Weighted proportional odds model
data$weights <- runif(100, 0.5, 2)
result4 <- orderedReg(
  formula = y ~ x1 + x2,
  data = data,
  family = "logit",
  weights = "weights"
)
summary(result4)

# Example 5: Bootstrap standard errors
result5 <- orderedReg(
  formula = y ~ x1 + x2,
  partial_formula = ~ z1 + z2,
  data = data,
  family = "logit",
  se_type = "bootstrap",
  bootstrap_reps = 500
)
result5$bootstrap_se

}
