% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poPlot.R
\name{poPlot}
\alias{poPlot}
\alias{bootstrap_coefs}
\title{Plot of non-ordered coefficient values}
\usage{
bootstrap_coefs(model, n_boot = 1000, seed = 123, iterlim = 3000)
}
\arguments{
\item{model}{A fitted model object from the `orderedReg` function.}

\item{n_boot}{An integer specifying the number of bootstrap samples. Default is 1000.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is 123.}

\item{iterlim}{Maximum number of iterations for the optimization algorithm. Default is 1000.}
}
\value{
A plot of the non-ordered coefficient values
}
\description{
Plot of non-ordered coefficient values
}
\details{
This function generates a plot with confidence intervals (using
resampling) for coefficients that vary across the levels of the outcome
to help identify which coefficients are non-ordered. It only checks the
non-ordered coefficients. For coefficients that are not sigificantly
different across levels, the proportional odds assumption is met. If they are
significantly different across level, the coefficients do not meet the
proportional odds assumption. This provides a graphical check for the
proportional odds assumption.
}
\examples{
library(orderedReg)

set.seed(10101)

data <- data.frame(
  x1 = rnorm(100),
  x2 = rbinom(100, 1, 0.5),
  z1 = rnorm(100),
  z2 = rbinom(100, 1, 0.5)
)

y.hat.1 <- -1.5 + 0.5*data$x1 + 0.5*data$x2
y.hat.2 <- -0.5 + 0.5*data$x1 + 0.65*data$x2

# Compute probabilities
p2 <- plogis(y.hat.2, lower.tail = FALSE)
p1 <- plogis(y.hat.1, lower.tail = FALSE) - p2
p0 <- 1 - p1 - p2

# Combine probabilities into a matrix
prob_matrix <- cbind(p0, p1, p2)

# Generate the ordinal outcome for each observation
y_values <- apply(prob_matrix, 1, function(p) {
  outcome <- rmultinom(1, size = 1, prob = p)
  which(outcome == 1)
})

# Create the ordered factor
data$y <- factor(y_values, levels = c(1,2,3), ordered = TRUE)

# Partial proportional odds model with a single formula
result2 <- orderedReg(
  formula = y ~ x1,
  partial_formula = ~ z1 + z2,
  data = data,
  family = "logit"
)

# Plot the non-ordered coefficients
poPlot(result2)

}
